// SPDX-License-Identifier: Apache-2.0
pragma solidity 0.8.24;

//  **     **  **       **                    ****   **
// /**    /** /**      //                    /**/   /**
// /**    /** /**       **  ******  ******  ****** ******
// /**    /** /******  /** **////  **////**///**/ ///**/
// /**    /** /**///** /**//***** /**   /**  /**    /**
// /**    /** /**  /** /** /////**/**   /**  /**    /**
// //*******  /******  /** ****** //******   /**    //**
// ///////    /////    // //////   //////    //      //

/**
 * @notice CraftData holds the data required to a crafting request
 * @param to address of the user receiving the token(s)
 * @param nonce generated by Genesis backend
 * @param collection_a address of parentA's collection
 * @param collection_b address of parentB's collection
 * @param parent_a tokenId of parentA
 * @param parent_b tokenId of parentB
 * @param payment_value amount of tokens to pay for the craft
 * @param payment_type type of payment accepted for the craft, either in crypto with an ERC20 token address or none
 * @param payer account paying for the craft fees
 * @param expected_cc_a parentA's expected craft count after craft
 * @param expected_cc_b parentB's expected craft count after craft
 * @param lockPeriod register a duration for which a parent cannot craft
 */
struct CraftData {
    address to;
    bytes32 nonce;
    address collection_a;
    address collection_b;
    uint256 parent_a;
    uint256 parent_b;
    uint256 payment_value;
    address payment_type;
    address payer;
    uint256 expected_cc_a;
    uint256 expected_cc_b;
    uint256 lockPeriod;
}
